bank

#include <iostream>
//#include <algorithm>

using namespace std;

int main()
{
    int n;
    cin >> n;
    int* banknoty;
    banknoty = new int[n];

    for (int i = 0; i < n; i++)
    {
        cin >> banknoty[i];
    }

    int siano;
    cin >> siano;

    int* tab;
    tab = new int[siano + 1];

    tab[0] = 0;

    for (int i = 1; i <= siano; i++)
    {
        tab[i] = 20002;
    }

    for (int i = n - 1; i >= 0; i--)
    {
        for (int j = siano - banknoty[i]; j > 0; j--)
        {
            if (tab[j + banknoty[i]] > tab[j])
            {
                tab[j + banknoty[i]] = tab[j] + 1;
            }
        }
        tab[banknoty[i]] = 1;
    }
    if (tab[siano] == 20002)
    {
        cout << "-1";
        return 0;
    }
    else
    {
        cout << tab[siano];
        return 0;
    }
}








editdist

#include <iostream>

using namespace std;

int tab[1000][1000];

int editdist(string a, string b, int ad, int bd)
{
    for (int i = 0; i <= ad; i++)
    {
        tab[i][0] = i;
    }
    for (int j = 0; j <= bd; j++)
    {
        tab[0][j] = j;
    }
    for (int i = 1; i <= ad; i++)
    {
        for (int j = 1; j <= bd; j++)
        {
            if (a[i - 1] == b[j - 1])
            {
                tab[i][j] = tab[i - 1][j - 1];
            }
            else if (tab[i - 1][j] <= tab[i][j - 1])
            {
                tab[i][j] = 1 + tab[i - 1][j];
            }
            else
            {
                tab[i][j] = 1 + tab[i][j - 1];
            }
        }
    }
    return tab[ad][bd];
}

int main()
{
    int ad, bd;
    string a, b;
    cin >> ad >> a >> bd >> b;
    cout << editdist(a, b, ad, bd);
    return 0;
}








lcs

#include <iostream>

using namespace std;

int tab[100][100];

int lcs(string a, string b, int ad, int bd)
{
    for (int i = 0; i <= ad; i++)
    {
        tab[i][0] = 0;
    }
    for (int j = 0; j <= bd; j++)
    {
        tab[0][j] = 0;
    }
    for (int i = 1; i <= ad; i++)
    {
        for (int j = 1; j <= bd; j++)
        {
            if (a[i - 1] == b[j - 1])
            {
                tab[i][j] = 1 + tab[i - 1][j - 1];
            }
            else
            {
                tab[i][j] = max(tab[i][j - 1], tab[i - 1][j]);
            }
        }
    }
    return tab[ad][bd];
}

int main()
{
    string a, b;
    cin >> a;
    cin >> b;
    cout << lcs(a, b, a.length(), b.length());
    return 0;
}










newton

#include <iostream>

using namespace std;

int d = 1000000007;

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin >> n;
    int* tab;
    tab = new int[n];
    tab[0] = 1;

    for (int i = 1; i <= n; i++)
    {
        tab[i] = 0;
    }
    for (int i = 1; i <= n; ++i)
    {
        for (int j = i; j >= 1; --j)
        {
            tab[j] = (tab[j - 1] + tab[j]) % d;
        }
    }
    for (int i = 0; i <= n; i++)
    {
        cout << tab[i] << " ";
    }
    return 0;
}











kotek

#include <iostream>

using namespace std;

int main()
{
    bool b = false;
    int n, wsk, kot, s;
    int* szt;
    cin >> n;
    szt = new int[n];
    kot = n;
    wsk = n;
    szt[0] = 100003;

    for (int i = 1; i <= n; i++)
    {
        cin >> s;
        szt[i] = s;
    }

    while (kot != 1)
    {
        if (szt[kot] > szt[kot - 2] && kot != 2 && b == false)
        {
            kot -= 2;
        }
        else if (szt[kot] > szt[kot - 1])
        {
            kot -= 1;
            b = false;
        }
        else if (szt[kot] <= szt[kot - 2] && szt[kot] <= szt[kot - 1] && szt[kot - 1] < szt[kot + 1] && kot !=n)
        {
            kot += 2;
            b = true;
        }
        else
        {
            wsk-=1;
            kot = wsk;
            b = false;
        }
    }
    cout << wsk;
    return 0;
}










THEMIS 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

najczęstsza litera

#include <iostream>
using namespace std;

int main()
{
    int* tab;
    int n;
    cin >> n;
    int tabMax = 0;
    int gdzie = 0;
    tab = new int[25];

    for (int i = 0; i <= 25; i++)
    {
        tab[i] = 0;
    }
    string slowo;
    string alfabet = "zyxwvyutsrponmlkjihgfedcba";
    
    cin >> slowo;

    for (int i = 0; i <= n - 1; i++) 
    {
        for (int j = 0; j <= 25; j++) 
        {
            if (slowo[i] == alfabet[j]) 
            {
                tab[j]++;
            }
        }
    }
    for (int i = 0; i <= 25; i++) 
    {
        if (tab[i] >= tabMax) 
        {
            tabMax = tab[i];
            gdzie = i;
        }
    }
    cout << tabMax << " " << alfabet[gdzie];
    return 0;
}








najczęstszy znak

#include <iostream>
using namespace std;

int main()
{
    int* tab;
    int* tab2;
    int* tab3;
    int n;
    cin >> n;
    int tabMax = 0;
    int gdzie = 0;
    tab = new int[25];
    tab2 = new int[25];
    tab3 = new int[25];

    for (int i = 0; i <= 25; i++)
    {
        tab[i] = 0;
        tab2[i] = 0;
        tab3[i] = 0;
    }
    string slowo;
    string alfabet = "zyxwvyutsrponmlkjihgfedcba";
    string alfabet2 = "ZYXWVYUTSRPONMLKJIHGFEDCBA";

    cin >> slowo;

    for (int i = 0; i <= n - 1; i++)
    {
        for (int j = 0; j <= 25; j++)
        {
            if (slowo[i] == alfabet[j])
            {
                tab[j]++;
            }
        }
    }
    for (int i = 0; i <= n - 1; i++)
    {
        for (int j = 0; j <= 25; j++)
        {
            if (slowo[i] == alfabet2[j])
            {
                tab2[j]++;
            }
        }
    }

    for (int i = 0; i <= 25; i++) 
    {
        tab3[i] = tab[i] + tab2[i];
    }

    for (int i = 0; i <= 25; i++)
    {
        if (tab3[i] >= tabMax)
        {
            tabMax = tab3[i];
            gdzie = i;
        }
    }
    cout << tabMax << " " << alfabet[gdzie];
    return 0;
}

porownywanie slownikowe:

#include <iostream>

using namespace std;

int main()
{
    int t, aa, bb;
    string a, b;
    cin >> t;

    for (int i = 0; i <= t - 1; i++)
    {
        cin >> aa;
        cin >> a;
        cin >> bb;
        cin >> b;
        if (a == b)
        {
            cout << "TU" << endl;
        }    
        else if (a < b)
        {
            cout << "WCZESNIEJ" << endl;
        }
        else if (a > b)
        {
            cout << "DALEJ" << endl;
        }
    }
}

palindrom:

#include <iostream>

using namespace std;

int main()
{
    string litery;
    int max;

    cin >> litery;

    int n = litery.length();
    
    for (int i = 0; i <= n - 1; i++)
    {
        string pom = litery.substr(0, i);
        string pom2 = pom;

        reverse(pom2.begin(), pom2.end());

        if (pom == pom2)
        {
            max = i;
        }
    }
    cout << max;
    return 0;
}









THEMIS3!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Równowaznosc cykliczna dwoch słów

#include <iostream>

using namespace std;

int main()
{
    int n;
    string s, w, pom, pom2;
    cin >> n;

    for (int o = 1; o <= n; o++)
    {
        cin >> w >> s;
        int ds = s.length();
        pom = w;
        pom2 = w;
        if (w != s)
        {
            for (int p = 0; p < ds; p++)
            {
                for (int i = 0; i < ds; i++)
                {
                    pom[i] = pom2[i + 1];
                }
                pom[ds - 1] = pom2[0];
                pom2 = pom;

                if (pom == s)
                {
                    cout << "TAK" << endl;
                    break;
                }
                if (w != s & p == (ds - 1))
                {
                    cout << "NIE" << endl;
                    break;
                }
            }
        }
    }
    return 0;
}














Wzorzec - pierwsze wystąpienie

#include <iostream>

using namespace std;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int dw, dt;
    string w, t;
    bool git = false;

    cin >> dw >> dt >> w >> t;
    for (int p = 0; p <= dt - dw; p++)
    {
        git = true;
        for (int i = 0; i < dw; i++)
        {
            if (t[p + i] != w[i])
            {
                git = false;
                break;
            }
        }
        if (git) 
        {
            cout << p << endl;
            break;
        }  
    }
    if (!git)
    {
        cout << "NIE";
    }
    return 0;
}


















Najdłuzszy prefix


#include <iostream>

using namespace std;

int main()
{
    int score = 0;
    int najlepszy = 0;
    int dw, dt;
    string w, t;

    cin >> dw >> dt >> w >> t;

    for (int p = 0; p < dt; p++)
    {
        if (w[0] == t[p]) 
        {
            score = 0;
            for (int i = 0; i < dw; i++) 
            {
                if ((p+i) < dt)
                {
                    if (w[i] == t[p + i])
                    {
                        score++;
                    }
                    else if (najlepszy < score)
                    {
                        najlepszy = score;
                        score = 0;
                    }
                }
            }
        }
    }
    cout << najlepszy;
    return 0;
}











Klasyka gatunku


#include <iostream>

using namespace std;

int main()
{

    int n;
    int pom = 9999999;
    int score = 0;

    string alfabet = "abcdefghijklmnoprstuyvwxyz";
    cin >> n;

    for (int p = 1; p <= n; p++)
    {
        string t, w;
        cin >> t >> w;
        int dt = t.length();
        int dw = w.length();
        for (int i = 0; i <= dw; i++)
        {
            //cout << "arma" << endl;
            if (w[i] == '?')
            {
               // cout << "jest znak zapytania" << endl;
                pom = i;
            }
        }
        if (pom == 9999999)
        {
            for (int f = 0; f <= dt; f++)
            {
                //cout << "arma2" << endl;
                for (int g = 0; g <= dw; g++)
                {
                    //cout << "arma3" << endl;
                    if (w[g] == t[f + g])
                    {
                        //cout << "arma4" << endl;
                        score++;
                    }
                }
            }
        }
        if (pom != 9999999)
        {
            for (int j = 0; j <= 25; j++)
            {
                w[pom] = alfabet[j];
                for (int o = 0; o <= dt; o++)
                {
                    for (int p = 0; p <= dw; p++)
                    {
                        if (w[p] == t[o + p])
                        {
                            score++;
                        }
                    }
                }
            }
        }
        cout << score << endl;
        score = 0;
        pom = 9999999;
    }
    return 0;
}